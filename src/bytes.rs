pub fn strip(bytes: Vec<u8>) -> Vec<u8> {
    bytes[36..bytes.len() - 12].to_vec()
}

pub fn repair(mut buffer: Vec<u8>) -> Vec<u8> {
    const PREPEND_DATA: [u8; 36] = [
        // Offset 0x00000000 to 0x00000023
        0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44,
        0x52, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x08, 0x02, 0x00, 0x00, 0x00, 0x4B,
        0x6D, 0x29, 0xDC, 0x00, 0x00, 0x00,
    ];
    const DATA: [u8; 12] = [
        // Offset 0x00000073 to 0x0000007F
        0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82,
    ];

    buffer.splice(0..0, PREPEND_DATA.iter().cloned());
    buffer.splice(buffer.len()..buffer.len(), DATA.iter().cloned());
    buffer
}
